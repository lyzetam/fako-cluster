# Fixed NVIDIA Container Toolkit Installer
apiVersion: v1
kind: ConfigMap
metadata:
  name: nvidia-toolkit-installer-script
  namespace: gpu-operator
data:
  install.sh: |
    #!/bin/bash
    set -e
    
    echo "Starting NVIDIA Container Toolkit Installer..."
    echo "Date: $(date)"
    echo "Hostname: $(hostname)"
    
    # Check if we're already installed
    if [ -f /host/usr/bin/nvidia-container-toolkit ]; then
        echo "NVIDIA Container Toolkit already installed on host"
        echo "Keeping container alive for monitoring..."
        sleep infinity
        exit 0
    fi
    
    echo "Installing NVIDIA Container Toolkit..."
    
    # Update package list
    apt-get update || {
        echo "Failed to update package list"
        exit 1
    }
    
    # Install dependencies
    apt-get install -y curl gnupg2 software-properties-common || {
        echo "Failed to install dependencies"
        exit 1
    }
    
    # Add NVIDIA repository
    distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
    echo "Detected distribution: $distribution"
    
    # Add GPG key
    curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg || {
        echo "Failed to add GPG key"
        exit 1
    }
    
    # Add repository
    curl -s -L https://nvidia.github.io/libnvidia-container/$distribution/libnvidia-container.list | \
      sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
      tee /etc/apt/sources.list.d/nvidia-container-toolkit.list || {
        echo "Failed to add repository"
        exit 1
    }
    
    # Update package list again
    apt-get update || {
        echo "Failed to update package list after adding repo"
        exit 1
    }
    
    # Install containerd and the NVIDIA container toolkit
    apt-get install -y containerd.io nvidia-container-toolkit || {
        echo "Failed to install containerd.io or nvidia-container-toolkit"
        exit 1
    }
    
    # Configure containerd if config exists
    if [ -f /host/etc/containerd/config.toml ]; then
        echo "Configuring containerd..."
        nvidia-ctk runtime configure --runtime=containerd --config=/host/etc/containerd/config.toml || {
            echo "Warning: Failed to configure containerd, but continuing..."
        }
        systemctl enable --now containerd || echo "Warning: failed to start containerd"
    else
        echo "Warning: containerd config not found at /host/etc/containerd/config.toml"
    fi
    
    # Create symlinks for libraries
    ldconfig || echo "Warning: ldconfig failed"
    
    # Copy NVIDIA binaries to host
    echo "Copying NVIDIA toolkit to host..."
    mkdir -p /host/usr/bin
    cp -r /usr/bin/nvidia-* /host/usr/bin/ || echo "Warning: Some files failed to copy"
    
    echo "NVIDIA Container Toolkit installation completed!"
    echo "Keeping container running..."
    
    # Keep container running
    sleep infinity
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-toolkit-installer
  namespace: gpu-operator
spec:
  selector:
    matchLabels:
      name: nvidia-toolkit-installer
  template:
    metadata:
      labels:
        name: nvidia-toolkit-installer
    spec:
      nodeSelector:
        kubernetes.io/hostname: yeezyai
      hostNetwork: true
      hostPID: true
      containers:
      - name: installer
        image: ubuntu:24.04
        command: ["/bin/bash", "/scripts/install.sh"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: scripts
          mountPath: /scripts
        - name: host-root
          mountPath: /host
        - name: containerd-config
          mountPath: /host/etc/containerd
        env:
        - name: DEBIAN_FRONTEND
          value: "noninteractive"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: scripts
        configMap:
          name: nvidia-toolkit-installer-script
          defaultMode: 0755
      - name: host-root
        hostPath:
          path: /
          type: Directory
      - name: containerd-config
        hostPath:
          path: /etc/containerd
          type: DirectoryOrCreate
