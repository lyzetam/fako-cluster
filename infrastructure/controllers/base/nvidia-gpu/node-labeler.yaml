# infrastructure/controllers/base/nvidia-gpu/node-labeler-updated.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-node-labeler
  namespace: nvidia-device-plugin
  labels:
    app.kubernetes.io/name: nvidia-node-labeler
    app.kubernetes.io/part-of: nvidia-gpu-infrastructure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nvidia-node-labeler
  labels:
    app.kubernetes.io/name: nvidia-node-labeler
    app.kubernetes.io/part-of: nvidia-gpu-infrastructure
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nvidia-node-labeler
  labels:
    app.kubernetes.io/name: nvidia-node-labeler
    app.kubernetes.io/part-of: nvidia-gpu-infrastructure
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvidia-node-labeler
subjects:
- kind: ServiceAccount
  name: nvidia-node-labeler
  namespace: nvidia-device-plugin
---
apiVersion: batch/v1
kind: Job
metadata:
  name: label-nvidia-gpu-nodes
  namespace: nvidia-device-plugin
  labels:
    app.kubernetes.io/name: nvidia-node-labeler
    app.kubernetes.io/part-of: nvidia-gpu-infrastructure
spec:
  ttlSecondsAfterFinished: 300
  backoffLimit: 3
  activeDeadlineSeconds: 600
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nvidia-node-labeler
        app.kubernetes.io/part-of: nvidia-gpu-infrastructure
    spec:
      serviceAccountName: nvidia-node-labeler
      restartPolicy: OnFailure
      
      nodeSelector:
        node-role.kubernetes.io/control-plane: "true"
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
        
      containers:
      - name: labeler
        image: bitnami/kubectl:1.29
        imagePullPolicy: IfNotPresent
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
            
        command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          set -e
          
          echo "=== NVIDIA GPU Node Labeling Job ==="
          echo "Date: $(date)"
          echo ""
          
          # Function to label a node
          label_node() {
            local node=$1
            echo "Labeling node: $node"
            
            # Apply all GPU-related labels
            kubectl label nodes "$node" nvidia.com/gpu=true --overwrite
            kubectl label nodes "$node" accelerator=nvidia-gpu --overwrite
            kubectl label nodes "$node" gpu.nvidia.present=true --overwrite
            kubectl label nodes "$node" feature.node.kubernetes.io/pci-10de.present=true --overwrite
            kubectl label nodes "$node" node-role.kubernetes.io/gpu-worker=true --overwrite
            kubectl label nodes "$node" hardware.tier=gpu --overwrite
            kubectl label nodes "$node" voice-pipeline=enabled --overwrite
            kubectl label nodes "$node" node-type=gpu-compute --overwrite
            
            echo "✓ Labels applied to $node"
          }
          
          # Remove GPU labels from non-GPU nodes
          remove_gpu_labels() {
            local node=$1
            echo "Removing GPU labels from node: $node"
            
            kubectl label nodes "$node" nvidia.com/gpu- --overwrite 2>/dev/null || true
            kubectl label nodes "$node" accelerator- --overwrite 2>/dev/null || true
            kubectl label nodes "$node" gpu.nvidia.present- --overwrite 2>/dev/null || true
            kubectl label nodes "$node" node-role.kubernetes.io/gpu-worker- --overwrite 2>/dev/null || true
            
            echo "✓ GPU labels removed from $node"
          }
          
          # Get current nodes
          echo "Current cluster nodes:"
          kubectl get nodes -o wide
          echo ""
          
          # Label playground node (from your config)
          if kubectl get node playground > /dev/null 2>&1; then
            echo "Found playground node - applying GPU labels..."
            label_node playground
          else
            echo "WARNING: playground node not found!"
          fi
          
          # Remove GPU labels from non-GPU nodes
          for node in pgbee pgmac01 pgmac02 pglenovo01 pglenovo02 thinkpad01 zz-macbookpro; do
            if kubectl get node $node > /dev/null 2>&1; then
              echo "Found $node - removing any GPU labels..."
              remove_gpu_labels $node
            fi
          done
          
          # Final verification
          echo ""
          echo "=== Verification ==="
          echo "GPU-labeled nodes:"
          kubectl get nodes -l nvidia.com/gpu=true --show-labels | grep -E "(nvidia|gpu)" || echo "No GPU labels found"
          
          echo ""
          echo "=== Job completed successfully ==="