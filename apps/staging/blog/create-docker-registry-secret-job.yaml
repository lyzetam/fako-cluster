apiVersion: batch/v1
kind: Job
metadata:
  name: create-docker-registry-secret
  namespace: blog
spec:
  template:
    spec:
      serviceAccountName: docker-secret-creator
      containers:
      - name: create-secret
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Get credentials from the simple secret
          USERNAME=$(kubectl get secret dockerhub-credentials -n blog -o jsonpath='{.data.username}' | base64 -d)
          PASSWORD=$(kubectl get secret dockerhub-credentials -n blog -o jsonpath='{.data.password}' | base64 -d)
          
          # Delete existing secret if it exists
          kubectl delete secret dockerhub-registry -n blog --ignore-not-found=true
          
          # Create the docker registry secret with proper escaping
          kubectl create secret docker-registry dockerhub-registry \
            --docker-server=https://index.docker.io/v1/ \
            --docker-username="${USERNAME}" \
            --docker-password="${PASSWORD}" \
            --namespace=blog \
            --dry-run=client -o yaml | kubectl apply -f -
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: docker-secret-creator
  namespace: blog
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: docker-secret-creator
  namespace: blog
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: docker-secret-creator
  namespace: blog
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: docker-secret-creator
subjects:
- kind: ServiceAccount
  name: docker-secret-creator
  namespace: blog
