apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: n8n
          image: n8nio/n8n:1.105.0
          ports:
            - containerPort: 5678
              protocol: TCP
          env:
            # Database Configuration
            - name: DB_TYPE
              value: "postgresdb"
            - name: DB_POSTGRESDB_HOST
              value: "postgres-cluster-rw.postgres.svc.cluster.local"
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: "app"
            - name: DB_POSTGRESDB_USER
              value: "app"
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-user-secret
                  key: password
            # n8n Configuration
            - name: N8N_HOST
              value: "n8n.landryzetam.net"
            - name: N8N_PORT
              value: "5678"
            - name: N8N_PROTOCOL
              value: "https"
            - name: WEBHOOK_URL
              value: "https://n8n.landryzetam.net/"
            - name: GENERIC_TIMEZONE
              value: "America/New_York"
            - name: N8N_LOG_LEVEL
              value: "info"
            - name: N8N_METRICS
              value: "true"
            - name: N8N_DIAGNOSTICS_ENABLED
              value: "false"
            - name: N8N_VERSION_NOTIFICATIONS_ENABLED
              value: "false"
            - name: N8N_TEMPLATES_ENABLED
              value: "true"
            - name: N8N_ONBOARDING_FLOW_DISABLED
              value: "true"
            - name: N8N_DISABLE_UI
              value: "false"
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-data
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5678
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5678
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data
