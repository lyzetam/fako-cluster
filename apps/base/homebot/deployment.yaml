apiVersion: apps/v1
kind: Deployment
metadata:
  name: homebot
  namespace: homebot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: homebot
  template:
    metadata:
      labels:
        app: homebot
    spec:
      initContainers:
        # This init container copies the configuration to the persistent volume
        - name: config-init
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              if [ ! -f /config/configuration.yaml ]; then
                echo "Copying initial configuration..."
                cp /config-init/configuration.yaml /config/
                # Create empty include files
                touch /config/automations.yaml
                touch /config/scripts.yaml
                touch /config/scenes.yaml
                echo "Initial configuration created"
              else
                echo "Configuration already exists, skipping..."
              fi
          volumeMounts:
            - name: config-init
              mountPath: /config-init
            - name: homebot-config
              mountPath: /config
      containers:
        - name: homebot
          image: ghcr.io/home-assistant/home-assistant:2025.6.1
          ports:
            - containerPort: 8123
              protocol: TCP
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: homebot-configmap
                  key: TZ
          volumeMounts:
            - mountPath: /config
              name: homebot-config
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "2000m"
      volumes:
        - name: homebot-config
          persistentVolumeClaim:
            claimName: homebot-config
        - name: config-init
          configMap:
            name: homebot-configmap
            items:
              - key: configuration.yaml
                path: configuration.yaml