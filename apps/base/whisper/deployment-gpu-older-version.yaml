# apps/base/whisper/deployment-gpu-older-version.yaml
# Alternative deployment using an older image version that may be compatible with older CUDA drivers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper-gpu
  namespace: whisper
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: whisper-gpu
  template:
    metadata:
      labels:
        app: whisper-gpu
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      containers:
      - name: whisper
        # Using an older version that should be compatible with CUDA 11.x drivers
        image: ghcr.io/slackr31337/wyoming-whisper-gpu:v2024.12.1
        ports:
        - containerPort: 10300
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: OMP_NUM_THREADS
          value: "1"  # Prevent threading issues
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:64,garbage_collection_threshold:0.8,expandable_segments:False"
        - name: CUDA_LAUNCH_BLOCKING
          value: "1"  # Forces synchronous CUDA operations for better memory management
        - name: TORCH_CUDA_EMPTY_CACHE_INTERVAL
          value: "1"  # Clear CUDA cache after every batch
        - name: TORCH_CUDA_ARCH_LIST
          value: "7.5;8.0;8.6"  # Optimize for common GPU architectures
        # Additional environment variables for CUDA compatibility
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        envFrom:
        - configMapRef:
            name: whisper-gpu-configmap
        
        volumeMounts:
        - mountPath: /data
          name: whisper-models
        
        resources:
          requests:
            memory: "4Gi"
            cpu: "3000m"
            nvidia.com/gpu: 1  # Request 1 GPU (RTX 3050 via NVIDIA_VISIBLE_DEVICES)
          limits:
            memory: "5Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1  # Limit to 1 GPU
        
        livenessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
      
      volumes:
      - name: whisper-models
        persistentVolumeClaim:
          claimName: whisper-models
