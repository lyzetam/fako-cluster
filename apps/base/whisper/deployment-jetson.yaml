# apps/base/whisper/deployment-jetson.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper-jetson
  namespace: whisper
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: whisper-jetson
  template:
    metadata:
      labels:
        app: whisper-jetson
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      
      # Strictly enforce running only on jetson02 node
      nodeSelector:
        kubernetes.io/hostname: jetson02
      
      # Node affinity to enforce placement only on jetson02
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - jetson02
      
      # Use NVIDIA runtime for GPU support
      runtimeClassName: nvidia
      
      # Tolerations for node-specific taints if any
      tolerations:
      - key: "jetson"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      
      # Enable host memory access for large models
      hostIPC: true
      
      containers:
      - name: whisper
        # Use specific version to avoid pulling latest and hitting rate limits
        # Also using docker.io explicitly to potentially use mirrors
        image: docker.io/rhasspy/wyoming-whisper:2.5.0
        imagePullPolicy: IfNotPresent
        command:
        - python3
        - -m
        - wyoming_faster_whisper
        - "--model"
        - "small"  # Using small model for Jetson's memory constraints
        - "--uri"
        - "tcp://0.0.0.0:10300"
        - "--data-dir"
        - "/data"
        - "--download-dir"
        - "/data/.cache"
        - "--device"
        - "cpu"  # Official image doesn't have CUDA support on ARM64
        - "--language"
        - "en"
        - "--compute-type"
        - "int8"  # Using int8 for CPU mode on ARM64
        - "--beam-size"
        - "1"
        ports:
        - containerPort: 10300
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: OMP_NUM_THREADS
          value: "1"  # Prevent threading issues
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:32,garbage_collection_threshold:0.9,expandable_segments:False"
        - name: CUDA_LAUNCH_BLOCKING
          value: "1"  # Forces synchronous CUDA operations for better memory management
        - name: TORCH_CUDA_EMPTY_CACHE_INTERVAL
          value: "1"  # Clear CUDA cache after every batch
        - name: TORCH_CUDA_ARCH_LIST
          value: "8.7"  # Jetson Orin Nano compute capability
        - name: NVIDIA_VISIBLE_DEVICES
          value: "0"  # Jetson only has GPU 0
        - name: CUDA_VISIBLE_DEVICES
          value: "0"  # Jetson only has GPU 0
        # ARM-specific optimizations
        - name: GOARCH
          value: "arm64"
        - name: GOOS
          value: "linux"
        envFrom:
        - configMapRef:
            name: whisper-jetson-configmap
        
        volumeMounts:
        - mountPath: /data
          name: whisper-models
        
        resources:
          requests:
            memory: "2Gi"     # Conservative start for 8GB system
            cpu: "2000m"      # 2 cores
            # nvidia.com/gpu: 1 # Removed - using CPU mode
          limits:
            memory: "4Gi"     # Half of available memory
            cpu: "4000m"      # 4 of 6 cores
            # nvidia.com/gpu: 1 # Removed - using CPU mode
        
        livenessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 120  # Give more time for model loading on ARM
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
      
      volumes:
      - name: whisper-models
        persistentVolumeClaim:
          claimName: whisper-models
