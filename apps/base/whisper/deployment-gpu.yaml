# apps/base/whisper/deployment-gpu.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper-gpu
  namespace: whisper
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: whisper-gpu
  template:
    metadata:
      labels:
        app: whisper-gpu
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      nodeSelector:
        kubernetes.io/hostname: yeezyai
        nvidia.com/gpu: "true"
      
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      runtimeClassName: nvidia
      
      containers:
      - name: whisper
        image: ghcr.io/slackr31337/wyoming-whisper-gpu:v2025.01.4
        ports:
        - containerPort: 10300
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: OMP_NUM_THREADS
          value: "1"  # Prevent threading issues
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:256,garbage_collection_threshold:0.5,expandable_segments:False"
        envFrom:
        - configMapRef:
            name: whisper-gpu-configmap
        
        volumeMounts:
        - mountPath: /data
          name: whisper-models
        
        resources:
          requests:
            memory: "2Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        
        livenessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 10300
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
      
      volumes:
      - name: whisper-models
        persistentVolumeClaim:
          claimName: whisper-models
