apiVersion: v1
kind: ConfigMap
metadata:
  name: housekeeping-script
  namespace: housekeeping
data:
  cleanup.sh: |
    #!/bin/bash
    set -euo pipefail
    
    # Colors for output
    GREEN='\033[0;32m'
    YELLOW='\033[1;33m'
    RED='\033[0;31m'
    NC='\033[0m' # No Color
    
    echo -e "${YELLOW}Starting housekeeping cleanup...${NC}"
    echo "Date: $(date)"
    echo ""
    
    # Counter for cleanup statistics
    TOTAL_DELETED=0
    TOTAL_FOUND=0
    
    # Function to cleanup pods in a namespace
    cleanup_namespace() {
        local namespace=$1
        echo -e "\n${YELLOW}Processing namespace: ${namespace}${NC}"
        
        # Find completed pods
        completed_pods=$(kubectl get pods -n "$namespace" -o json | jq -r '.items[] | select(.status.phase == "Succeeded") | .metadata.name' || true)
        
        # Find failed pods
        failed_pods=$(kubectl get pods -n "$namespace" -o json | jq -r '.items[] | select(.status.phase == "Failed") | .metadata.name' || true)
        
        # Combine and count
        all_pods=$(echo -e "$completed_pods\n$failed_pods" | grep -v '^$' | sort -u || true)
        pod_count=$(echo "$all_pods" | grep -v '^$' | wc -l || echo "0")
        
        if [ "$pod_count" -gt 0 ]; then
            echo "Found $pod_count completed/failed pods:"
            echo "$all_pods" | while read -r pod; do
                if [ ! -z "$pod" ]; then
                    # Get pod age
                    age=$(kubectl get pod "$pod" -n "$namespace" -o jsonpath='{.status.startTime}' 2>/dev/null || echo "unknown")
                    phase=$(kubectl get pod "$pod" -n "$namespace" -o jsonpath='{.status.phase}' 2>/dev/null || echo "unknown")
                    
                    echo "  - $pod (phase: $phase, started: $age)"
                    
                    # Delete the pod
                    if kubectl delete pod "$pod" -n "$namespace" --grace-period=0 --force 2>/dev/null; then
                        echo -e "    ${GREEN}✓ Deleted${NC}"
                        ((TOTAL_DELETED++))
                    else
                        echo -e "    ${RED}✗ Failed to delete${NC}"
                    fi
                fi
            done
            ((TOTAL_FOUND+=pod_count))
        else
            echo "No completed/failed pods found"
        fi
    }
    
    # Get all namespaces
    namespaces=$(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}')
    
    # Process each namespace
    for ns in $namespaces; do
        cleanup_namespace "$ns"
    done
    
    # Summary
    echo -e "\n${GREEN}========================================${NC}"
    echo -e "${GREEN}Housekeeping cleanup completed!${NC}"
    echo -e "Total pods found: ${TOTAL_FOUND}"
    echo -e "Total pods deleted: ${TOTAL_DELETED}"
    echo -e "Date: $(date)"
    echo -e "${GREEN}========================================${NC}"
