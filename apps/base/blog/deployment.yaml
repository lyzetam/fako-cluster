apiVersion: apps/v1
kind: Deployment
metadata:
  name: hugo-blog
  namespace: blog
  labels:
    app.kubernetes.io/name: hugo-blog
    app.kubernetes.io/component: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hugo-blog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hugo-blog
    spec:
      containers:
      - name: hugo
        image: klakegg/hugo:0.131.0-ext-alpine
        command:
        - /bin/sh
        - -c
        - |
          # Copy Hugo config from ConfigMap if it exists
          if [ -f /config/config.toml ]; then
            cp /config/config.toml /site/config.toml
          fi
          
          # Start Hugo server
          cd /site
          hugo server \
            --bind=0.0.0.0 \
            --port=80 \
            --baseURL=https://blog.landryzetam.net \
            --appendPort=false \
            --disableFastRender
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: content
          mountPath: /site
        - name: hugo-config
          mountPath: /config
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
      volumes:
      - name: content
        persistentVolumeClaim:
          claimName: blog-content
      - name: hugo-config
        configMap:
          name: hugo-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
