apiVersion: apps/v1
kind: Deployment
metadata:
  name: hugo-blog
  namespace: blog
  labels:
    app.kubernetes.io/name: hugo-blog
    app.kubernetes.io/component: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hugo-blog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hugo-blog
    spec:
      imagePullSecrets:
      - name: dockerhub-registry
      containers:
      - name: hugo
        image: lzetam/hugo:latest
        command:
        - /bin/sh
        - -c
        - |
          # Debug: Check what's in the image
          echo "Checking for hugo binary..."
          which hugo || echo "hugo not in PATH"
          find / -name hugo -type f 2>/dev/null || echo "hugo binary not found"
          
          # Check what's in the root directory
          echo "Contents of root directory:"
          ls -la /
          
          # Check if this is a pre-built static site
          if [ -d /usr/share/nginx/html ]; then
            echo "Found nginx html directory"
            ls -la /usr/share/nginx/html/
          fi
          
          # Keep container running for debugging
          echo "Keeping container alive for debugging..."
          sleep 3600
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: content
          mountPath: /site
        - name: hugo-config
          mountPath: /config
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 20
          periodSeconds: 5
      volumes:
      - name: content
        persistentVolumeClaim:
          claimName: blog-content
      - name: hugo-config
        configMap:
          name: hugo-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
