apiVersion: apps/v1
kind: Deployment
metadata:
  name: oura-collector
  namespace: oura-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oura-collector
  template:
    metadata:
      labels:
        app: oura-collector
    spec:
      serviceAccountName: oura-collector
      containers:
      - name: oura-collector
        image: lzetam/oura-collector:latest
        ports:
        - containerPort: 8080
          name: health
          protocol: TCP
        envFrom:
        - configMapRef:
            name: oura-collector-config
        - secretRef:
            name: aws-credentials
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        volumeMounts:
        - name: data
          mountPath: /data  # For fallback file storage if needed
      
      volumes:
      - name: data
        emptyDir: {}  # Temporary storage, not persistent since we're using PostgreSQL