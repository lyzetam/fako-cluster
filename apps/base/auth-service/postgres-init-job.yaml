apiVersion: batch/v1
kind: Job
metadata:
  name: auth-service-db-init
  namespace: auth-service
  # annotations:
  #   job.version: "v5"  # Change to force recreation
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: db-init
        image: lzetam/auth-service:latest
        command:
        - /bin/sh
        - -c
        - |
          python /app/src/scripts/init_database.py \
            --create-db \
            --connection-string "postgresql://$DATABASE_USER:$DATABASE_PASSWORD@$DATABASE_HOST:$DATABASE_PORT/$DATABASE_NAME"
        env:
        - name: DATABASE_HOST
          value: "postgres-cluster-rw.postgres.svc.cluster.local"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          value: "auth_service"
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: postgres-admin-secret
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-admin-secret
              key: password


# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: auth-service-db-init
#   namespace: auth-service
# spec:
#   ttlSecondsAfterFinished: 300
#   template:
#     spec:
#       restartPolicy: Never
#       containers:
#       - name: db-init
#         image: lzetam/auth-service:latest
#         command:
#         - python
#         - /app/src/scripts/init_database.py
#         - --create-db
#         env:
#         # Database configuration
#         - name: DATABASE_HOST
#           value: "postgres-cluster-rw.postgres.svc.cluster.local"
#         - name: DATABASE_PORT
#           value: "5432"
#         - name: DATABASE_NAME
#           value: "auth_service"
#         - name: DATABASE_USER
#           valueFrom:
#             secretKeyRef:
#               name: postgres-admin-secret
#               key: username
#         - name: DATABASE_PASSWORD
#           valueFrom:
#             secretKeyRef:
#               name: postgres-admin-secret
#               key: password
#         # AWS configuration
#         - name: AWS_DEFAULT_REGION
#           value: "us-east-1"
#         - name: AUTH_POSTGRES_SECRETS_NAME
#           value: "postgres/admin-credentials"
#         - name: AUTH_API_SECRETS_NAME
#           value: "auth-service/api-key"
#         - name: AUTH_SUPERUSER_SECRETS_NAME
#           value: "auth-service/super-user"
#         # Add AWS credentials from the secret
#         - name: AWS_ACCESS_KEY_ID
#           valueFrom:
#             secretKeyRef:
#               name: aws-credentials
#               key: access-key-id
#         - name: AWS_SECRET_ACCESS_KEY
#           valueFrom:
#             secretKeyRef:
#               name: aws-credentials
#               key: secret-access-key