# apps/base/auth-service/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        # Streamlit UI Container
        - name: auth-service
          image: lzetam/auth-service:latest
          ports:
            - containerPort: 8501
              protocol: TCP
              name: streamlit
          env:
            - name: AUTH_API_SECRETS_NAME
              value: "auth-service/api-key"  
            # Database configuration
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: port
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: database
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: password
            # AWS configuration
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
            # Auth service specific configs
            - name: AUTH_API_URL
              value: "http://localhost:8000/api/v1"
            - name: ENABLE_API_KEY_AUTH
              value: "true"
            # Streamlit config
            - name: STREAMLIT_SERVER_PORT
              value: "8501"
            - name: STREAMLIT_SERVER_ADDRESS
              value: "0.0.0.0"
            # AWS Secrets Manager names
            - name: AUTH_POSTGRES_SECRETS_NAME
              value: "postgres/admin-credentials"
            - name: AUTH_SUPERUSER_SECRETS_NAME
              value: "auth-service/super-user"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /_stcore/health
              port: 8501
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_stcore/health
              port: 8501
            initialDelaySeconds: 20
            periodSeconds: 5
        
        # FastAPI Backend Container
        - name: auth-api
          image: lzetam/auth-service:latest
          workingDir: /app/src
          command: 
            - python
            - -m
            - uvicorn
            - app:app
            - --host
            - "0.0.0.0"
            - --port
            - "8000"
          ports:
            - containerPort: 8000
              protocol: TCP
              name: api
          env:
            # Database configuration
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: host
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: port
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: database
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service-db-credentials
                  key: password
            # AWS configuration
            - name: AWS_DEFAULT_REGION
              value: "us-east-1"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
            # AWS Secrets Manager names
            - name: AUTH_API_SECRETS_NAME
              value: "auth-service/api-key"
            - name: AUTH_POSTGRES_SECRETS_NAME
              value: "postgres/admin-credentials"
            - name: AUTH_SUPERUSER_SECRETS_NAME
              value: "auth-service/super-user"
            # API Configuration
            - name: API_HOST
              value: "0.0.0.0"
            - name: API_PORT
              value: "8000"
            - name: API_PREFIX
              value: "/api/v1"
            - name: ENABLE_API_KEY_AUTH
              value: "true"
            - name: DEFAULT_ADMIN_EMAIL
              value: "admin@landryzetam.net"
            # Health check port
            - name: HEALTH_CHECK_PORT
              value: "8888"
            # Logging
            - name: LOG_LEVEL
              value: "INFO"
            - name: LOG_FORMAT
              value: "text"
            # CORS settings
            - name: CORS_ENABLED
              value: "true"
            - name: CORS_ORIGINS
              value: '["*"]'
            # Rate limiting
            - name: ENABLE_RATE_LIMITING
              value: "true"
            - name: RATE_LIMIT_PER_MINUTE
              value: "60"
            # Database pool settings
            - name: CONNECTION_POOL_SIZE
              value: "10"
            - name: CONNECTION_POOL_OVERFLOW
              value: "5"
            # Password hashing
            - name: PASSWORD_HASH_ITERATIONS
              value: "600000"
            # Workers
            - name: MAX_WORKERS
              value: "1"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
      
      restartPolicy: Always