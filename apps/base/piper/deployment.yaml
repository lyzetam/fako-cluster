# apps/base/piper/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: piper
  namespace: piper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: piper
  template:
    metadata:
      labels:
        app: piper
    spec:
      nodeSelector:
        kubernetes.io/hostname: lenovo
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        # Deterministically download ryan voice before main container starts
        - name: voice-init
          image: busybox:1.37.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              BASE_URL="https://github.com/rhasspy/piper/releases/download/2023.11.14-2"
              VOICE="en_US-ryan-high"
              for f in "${VOICE}.onnx" "${VOICE}.onnx.json"; do
                if [ ! -f "/data/${f}" ]; then
                  echo "Downloading ${f}..."
                  for i in 1 2 3; do
                    wget -q -O "/data/${f}.tmp" "${BASE_URL}/${f}" && mv "/data/${f}.tmp" "/data/${f}" && break || sleep $((i*5))
                  done
                  [ -f "/data/${f}" ] || { echo "Failed to fetch ${f}"; exit 1; }
                else
                  echo "Already present: ${f}"
                fi
              done
          volumeMounts:
            - mountPath: /data
              name: piper-data
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      containers:
        # Main Piper container
        - name: piper
          image: rhasspy/wyoming-piper:latest
          ports:
            - containerPort: 10200
              protocol: TCP
          args:
            - "--voice"
            - "en_US-ryan-high"
            - "--uri"
            - "tcp://0.0.0.0:10200"
            - "--data-dir"
            - "/data"
            - "--download-dir"
            - "/data"
            - "--max-piper-procs"
            - "6"
            - "--update-voices"
            - "--debug"
          env:
            - name: OMP_NUM_THREADS
              value: "1"
          volumeMounts:
            - mountPath: /data
              name: piper-data
          resources:
            requests:
              memory: "3Gi"      # More memory on pglenovo01
              cpu: "3000m"       # 3 cores
            limits:
              memory: "6Gi"      # Higher limit on better node
              cpu: "4000m"       # 4 cores available
          livenessProbe:
            tcpSocket:
              port: 10200
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            tcpSocket:
              port: 10200
            initialDelaySeconds: 10
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 10200
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 30
        
        # Lightweight voice manager (only downloads what's missing)
        - name: voice-manager
          image: busybox:1.37.0
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "Voice Manager Starting..."
              
              # Simple monitoring - Piper already has the voices it needs
              while true; do
                echo "Voice manager check at $(date)"
                
                # Check if essential voice still exists
                if [ -f /data/en_US-ryan-high.onnx ]; then
                  echo "✓ Essential voice present (ryan-high)"
                else
                  echo "⚠ Essential voice missing (ryan-high)!"
                fi
                
                # List available voices
                echo "Available voices:"
                ls -la /data/*.onnx 2>/dev/null || echo "No voices found"
                
                # Sleep for 1 hour
                sleep 3600
              done
          volumeMounts:
            - mountPath: /data
              name: piper-data
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "64Mi"
              cpu: "50m"
      
      volumes:
        - name: piper-data
          persistentVolumeClaim:
            claimName: piper-data
