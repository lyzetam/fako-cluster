apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-website-fetcher
  namespace: mcp-servers
  labels:
    app.kubernetes.io/name: mcp-website-fetcher
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/part-of: kagent
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mcp-website-fetcher
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mcp-website-fetcher
        app.kubernetes.io/component: mcp-server
        app.kubernetes.io/part-of: kagent
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: mcp-server
        # Using a simple HTTP server as placeholder
        # Replace with actual MCP server image when available
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: cache-volume
          mountPath: /var/cache/nginx
        - name: run-volume
          mountPath: /var/run
      volumes:
      - name: cache-volume
        emptyDir: {}
      - name: run-volume
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - mcp-website-fetcher
              topologyKey: kubernetes.io/hostname
