# apps/base/mcp-servers/filesystem-mcp/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filesystem-mcp-server
  namespace: mcp-servers
  labels:
    app.kubernetes.io/name: filesystem-mcp-server
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/part-of: mcp-servers
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: filesystem-mcp-server
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: filesystem-mcp-server
        app.kubernetes.io/component: mcp-server
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: setup-app
          image: node:22-alpine
          workingDir: /tmp/build
          command: ["/bin/sh"]
          args:
            - -c
            - |
              set -e
              echo "Setting up MCP server..."
              
              # Create build directory with proper permissions
              mkdir -p /tmp/build
              cd /tmp/build
              
              # Copy source files from ConfigMap
              echo "Copying source files..."
              cp /source/package.json .
              cp /source/index.js .
              
              # Install dependencies
              echo "Installing dependencies..."
              npm install --production --silent
              
              # Copy everything to app directory
              echo "Copying to app directory..."
              cp -r /tmp/build/* /app/
              
              echo "Setup completed successfully!"
          volumeMounts:
            - name: source-code
              mountPath: /source
            - name: app-volume
              mountPath: /app
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      containers:
        - name: filesystem-mcp-server
          image: node:22-alpine
          stdin: true
          tty: true
          workingDir: /app
          command: ["node", "index.js"]
          args: ["/data", "/logs", "/config"]
          env:
            - name: MAX_FILE_SIZE
              value: "10485760"
            - name: NODE_ENV
              value: "production"
          volumeMounts:
            - name: app-volume
              mountPath: /app
            - mountPath: /data
              name: shared-data
            - mountPath: /logs
              name: log-storage
            - mountPath: /config
              name: config-storage
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: source-code
          configMap:
            name: filesystem-mcp-source
        - name: app-volume
          emptyDir: {}
        - name: shared-data
          persistentVolumeClaim:
            claimName: filesystem-mcp-data
        - name: log-storage
          persistentVolumeClaim:
            claimName: filesystem-mcp-logs
        - name: config-storage
          persistentVolumeClaim:
            claimName: filesystem-mcp-config
