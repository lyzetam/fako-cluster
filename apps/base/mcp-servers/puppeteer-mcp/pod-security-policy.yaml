apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: puppeteer-mcp-psp
  namespace: mcp-servers
  labels:
    app.kubernetes.io/name: puppeteer-mcp-server
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/part-of: mcp-servers
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 1000
  runAsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 1000
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1000
        max: 1000
  readOnlyRootFilesystem: true
  # Prevent access to host paths
  allowedHostPaths: []
  # Prevent mounting of sensitive host directories
  forbiddenSysctls:
    - '*'
  # Resource limits
  defaultAllowPrivilegeEscalation: false
  defaultAddCapabilities: []
  allowedCapabilities: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: puppeteer-mcp-psp-user
  namespace: mcp-servers
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - puppeteer-mcp-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: puppeteer-mcp-psp-binding
  namespace: mcp-servers
roleRef:
  kind: Role
  name: puppeteer-mcp-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: default
  namespace: mcp-servers
