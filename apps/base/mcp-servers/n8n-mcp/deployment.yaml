apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n-mcp-server
  namespace: mcp-servers
  labels:
    app.kubernetes.io/name: n8n-mcp-server
    app.kubernetes.io/component: mcp-server
    app.kubernetes.io/part-of: mcp-servers
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: n8n-mcp-server
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: n8n-mcp-server
        app.kubernetes.io/component: mcp-server
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: n8n-mcp-server
          image: ghcr.io/czlonkowski/n8n-mcp:latest
          ports:
            - containerPort: 3000
              protocol: TCP
              name: http
          env:
            - name: MCP_MODE
              value: "http"
            - name: NODE_ENV
              value: "production"
            - name: LOG_LEVEL
              value: "info"
            - name: DISABLE_CONSOLE_OUTPUT
              value: "false"
            - name: PORT
              value: "3000"
            - name: HOST
              value: "0.0.0.0"
            - name: USE_FIXED_HTTP
              value: "true"
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: n8n-mcp-auth-secret
                  key: auth-token
            - name: N8N_API_KEY
              valueFrom:
                secretKeyRef:
                  name: n8n-mcp-secret
                  key: api-key
            - name: N8N_API_URL
              valueFrom:
                secretKeyRef:
                  name: n8n-mcp-secret
                  key: n8n-url
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
