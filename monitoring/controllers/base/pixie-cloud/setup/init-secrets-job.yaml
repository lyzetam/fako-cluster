# Job to initialize TLS certificates using mkcert
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-secrets-script
  namespace: plc
data:
  init-secrets.sh: |
    #!/bin/bash
    set -e
    
    echo "Initializing Pixie Cloud secrets..."
    
    # Check if secrets already exist
    if kubectl get secret cloud-proxy-tls -n plc >/dev/null 2>&1; then
      echo "TLS secrets already exist. Skipping initialization."
      exit 0
    fi
    
    # Install mkcert
    echo "Installing mkcert..."
    apt-get update && apt-get install -y wget ca-certificates
    wget -O /tmp/mkcert https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-linux-amd64
    chmod +x /tmp/mkcert
    
    # Initialize mkcert
    echo "Initializing mkcert CA..."
    CAROOT=/tmp/ca /tmp/mkcert -install
    
    # Generate certificates
    echo "Generating certificates for dev.withpixie.dev..."
    cd /tmp
    CAROOT=/tmp/ca /tmp/mkcert \
      "dev.withpixie.dev" \
      "*.dev.withpixie.dev" \
      "localhost" \
      "127.0.0.1" \
      "cloud-proxy-service" \
      "cloud-proxy-service.plc" \
      "cloud-proxy-service.plc.svc" \
      "cloud-proxy-service.plc.svc.cluster.local" \
      "vzconn-service" \
      "vzconn-service.plc" \
      "vzconn-service.plc.svc" \
      "vzconn-service.plc.svc.cluster.local"
    
    # Create TLS secrets
    echo "Creating TLS secrets..."
    kubectl create secret tls cloud-proxy-tls \
      --cert="/tmp/dev.withpixie.dev+11.pem" \
      --key="/tmp/dev.withpixie.dev+11-key.pem" \
      -n plc
    
    kubectl create secret tls vzconn-tls \
      --cert="/tmp/dev.withpixie.dev+11.pem" \
      --key="/tmp/dev.withpixie.dev+11-key.pem" \
      -n plc
    
    # Create CA secret
    echo "Creating CA secret..."
    kubectl create secret generic pixie-cloud-ca \
      --from-file=ca.crt=/tmp/ca/rootCA.pem \
      -n plc
    
    echo "Secrets initialization complete!"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-secrets
  namespace: plc
spec:
  template:
    metadata:
      name: init-secrets
    spec:
      serviceAccountName: init-secrets
      restartPolicy: OnFailure
      containers:
      - name: init-secrets
        image: bitnami/kubectl:latest
        command: ["/bin/bash", "/scripts/init-secrets.sh"]
        volumeMounts:
        - name: script
          mountPath: /scripts
        env:
        - name: KUBECONFIG
          value: "/.kube/config"
      volumes:
      - name: script
        configMap:
          name: init-secrets-script
          defaultMode: 0755
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: init-secrets
  namespace: plc
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: init-secrets
  namespace: plc
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: init-secrets
  namespace: plc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: init-secrets
subjects:
- kind: ServiceAccount
  name: init-secrets
  namespace: plc
