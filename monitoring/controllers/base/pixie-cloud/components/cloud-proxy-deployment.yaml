# Pixie Cloud Proxy - Main frontend service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-proxy-server
  namespace: plc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-proxy-server
  template:
    metadata:
      labels:
        app: cloud-proxy-server
        name: cloud-proxy-server
    spec:
      containers:
      - name: cloud-proxy-server
        image: gcr.io/pixie-oss/pixie-dev-public/cloud/proxy_server_image:0.1.7
        ports:
        - containerPort: 56000
          name: https
        - containerPort: 56001
          name: metrics
        env:
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              name: pl-deploy-secrets
              key: jwt-signing-key
        - name: PL_DOMAIN_NAME
          valueFrom:
            secretKeyRef:
              name: pl-domain-config
              key: PL_DOMAIN_NAME
        - name: PL_API_SERVICE_HTTP
          value: "api-service.plc.svc.cluster.local:50200"
        - name: PL_AUTH_SERVICE
          value: "auth-service.plc.svc.cluster.local:50100"
        - name: PL_PROFILE_SERVICE
          value: "profile-service.plc.svc.cluster.local:50150"
        - name: PL_SEGMENT_UI_WRITE_KEY
          value: ""  # Optional
        - name: PL_SERVER_TLS_CERT
          value: "/certs/tls.crt"
        - name: PL_SERVER_TLS_KEY
          value: "/certs/tls.key"
        - name: PL_PROXY_GRPC_ADDRESS
          value: "0.0.0.0:56000"
        - name: PL_AUTH_MODE
          value: "kratos_hydra"
        - name: PL_HYDRA_PUBLIC_URL
          value: "http://hydra-public.plc.svc.cluster.local:4444"
        - name: PL_KRATOS_PUBLIC_URL
          value: "http://kratos-public.plc.svc.cluster.local:4433"
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 1Gi
            cpu: 1
        volumeMounts:
        - name: certs
          mountPath: /certs
        - name: ui-assets
          mountPath: /assets
        livenessProbe:
          httpGet:
            path: /healthz
            port: 56000
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 56000
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: certs
        secret:
          secretName: cloud-proxy-tls
      - name: ui-assets
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-proxy-service
  namespace: plc
spec:
  type: LoadBalancer
  selector:
    app: cloud-proxy-server
  ports:
  - name: https
    port: 443
    targetPort: 56000
    protocol: TCP
  - name: metrics
    port: 56001
    targetPort: 56001
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-proxy-service-internal
  namespace: plc
spec:
  type: ClusterIP
  selector:
    app: cloud-proxy-server
  ports:
  - name: https
    port: 56000
    targetPort: 56000
    protocol: TCP
---
# Envoy Proxy for additional routing
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-envoy-config
  namespace: plc
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: AUTO
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/healthz"
                    direct_response:
                      status: 200
                      body:
                        inline_string: "OK"
                  - match:
                      prefix: "/api/viziercerts"
                    route:
                      cluster: vzconn_service
                  - match:
                      prefix: "/"
                    route:
                      cluster: cloud_proxy_service
                      timeout: 300s
                response_headers_to_add:
                - header:
                    key: "X-Frame-Options"
                    value: "DENY"
                - header:
                    key: "X-Content-Type-Options"
                    value: "nosniff"
                - header:
                    key: "Strict-Transport-Security"
                    value: "max-age=31536000; includeSubDomains"
              http_filters:
              - name: envoy.filters.http.cors
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: cloud_proxy_service
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: cloud_proxy_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: cloud-proxy-service-internal.plc.svc.cluster.local
                    port_value: 56000
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: cloud-proxy-service-internal.plc.svc.cluster.local
      - name: vzconn_service
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: vzconn_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: vzconn-service.plc.svc.cluster.local
                    port_value: 50800
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-envoy
  namespace: plc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy-envoy
  template:
    metadata:
      labels:
        app: proxy-envoy
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.28-latest
        ports:
        - containerPort: 8080
          name: http
        command:
        - envoy
        - -c
        - /etc/envoy/envoy.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/envoy
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m
      volumes:
      - name: config
        configMap:
          name: proxy-envoy-config
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-envoy-service
  namespace: plc
spec:
  type: ClusterIP
  selector:
    app: proxy-envoy
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
